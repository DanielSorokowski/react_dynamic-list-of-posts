{"version":3,"sources":["utils/fetchClient.ts","api/api.ts","components/PostsList.tsx","components/Loader/Loader.tsx","components/NewCommentForm.tsx","components/PostDetails.tsx","components/UserSelector.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","json","client","addComment","postId","name","email","PostsList","posts","currentPost","setPost","className","map","post","id","title","type","onClick","handleClick","Loader","NewCommentForm","setComments","useState","setName","setEmail","setBody","isLoading","setIsLoading","errors","setErrors","handleSubmit","event","a","preventDefault","newComment","prevState","handleChange","value","target","onSubmit","htmlFor","placeholder","onChange","PostDetails","comments","hasError","setHasError","isNewComent","setIsNewComent","hasComments","setHasComments","useEffect","res","catch","length","handleDelete","commentId","deleteComment","filter","comment","href","UserSelector","selectedUserId","setSelectedUserId","users","setUsers","selectedUserName","setSelectedUserName","isDropDownActive","setIsDropDownActive","dropdownRef","useRef","user","handleClickOutside","current","contains","document","addEventListener","removeEventListener","ref","role","selectUser","App","setPosts","hasPost","setHasPost","classNames","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.22a8f9f0.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { User } from '../types/User';\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\nimport { client } from '../utils/fetchClient';\n\nexport const getUsers = () => {\n  return client.get<User[]>('/users');\n};\n\nexport const getPostsByUser = (id: number) => {\n  return client.get<Post[]>(`/posts?userId=${id}`);\n};\n\nexport const getCommentsByPost = (postId: number) => {\n  return client.get<Comment[]>(`/comments?postId=${postId}`);\n};\n\nexport const addComment = (\n  postId: number, name: string, email: string, body: string,\n) => {\n  return client.post<Comment>('/comments', {\n    postId,\n    name,\n    email,\n    body,\n  });\n};\n\nexport const deleteComment = (commentId: number) => {\n  return client.delete(`/comments/${commentId}`);\n};\n","import React from 'react';\nimport { Post } from '../types/Post';\n\ninterface Props {\n  posts: Post[],\n  currentPost: Post | null;\n  setPost: (post: Post | null) => void;\n}\n\nexport const PostsList: React.FC<Props> = ({ posts, currentPost, setPost }) => {\n  const handleClick = (post: Post) => {\n    if (currentPost?.id !== post.id) {\n      setPost(post);\n    } else {\n      setPost(null);\n    }\n  };\n\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {posts.map(post => (\n            <tr data-cy=\"Post\" key={post.id}>\n              <td data-cy=\"PostId\">{post.id}</td>\n              <td data-cy=\"PostTitle\">\n                {post.title}\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  type=\"button\"\n                  data-cy=\"PostButton\"\n                  className={`button is-link ${currentPost?.id !== post.id && 'is-light'}`}\n                  onClick={() => handleClick(post)}\n                >\n                  {currentPost?.id !== post.id ? 'Open' : 'Close'}\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, {\n  ChangeEvent,\n  FormEvent,\n  SetStateAction,\n  useState,\n} from 'react';\nimport { Comment } from '../types/Comment';\nimport { addComment } from '../api/api';\n\ninterface Props {\n  postId: number;\n  setComments: (comment: SetStateAction<Comment[]>) => void;\n}\n\nexport const NewCommentForm: React.FC<Props> = ({\n  postId,\n  setComments,\n}) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState({\n    name: false,\n    email: false,\n    body: false,\n  });\n\n  const handleSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!name || !email || !body) {\n      setErrors({\n        name: !name,\n        email: !email,\n        body: !body,\n      });\n\n      return;\n    }\n\n    setIsLoading(true);\n\n    const newComment = await addComment(postId, name, email, body);\n\n    setComments(prevState => [...prevState, newComment]);\n\n    setIsLoading(false);\n    setBody('');\n  };\n\n  const handleChange = (\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    const { value } = event.target;\n\n    switch (event.target.name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'body':\n        setBody(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleClear = () => {\n    setName('');\n    setEmail('');\n    setBody('');\n    setErrors({\n      name: false,\n      email: false,\n      body: false,\n    });\n  };\n\n  return (\n    <form data-cy=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={`input ${errors.name && 'is-danger'}`}\n            value={name}\n            onChange={handleChange}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {errors.name && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {errors.name && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={`input ${errors.email && 'is-danger'}`}\n            value={email}\n            onChange={handleChange}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {errors.email && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {errors.email && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={`textarea ${errors.body && 'is-danger'}`}\n            value={body}\n            onChange={handleChange}\n          />\n        </div>\n\n        {errors.body && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button type=\"submit\" className={`button is-link ${isLoading && 'is-loading'}`}>\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={handleClear}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\nimport { getCommentsByPost, deleteComment } from '../api/api';\nimport { NewCommentForm } from './NewCommentForm';\n\ninterface Props {\n  post: Post | null;\n}\n\nexport const PostDetails: React.FC<Props> = ({ post }) => {\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isNewComent, setIsNewComent] = useState(false);\n  const [hasComments, setHasComments] = useState(false);\n\n  useEffect(() => {\n    if (post) {\n      setIsLoading(true);\n      getCommentsByPost(post.id).then((res) => {\n        setIsLoading(false);\n        setComments(res);\n        setIsNewComent(false);\n      }).catch(() => {\n        setIsLoading(false);\n        setHasComments(true);\n        setHasError(true);\n      });\n    }\n  }, [post]);\n\n  useEffect(() => {\n    if (!comments.length) {\n      setHasComments(false);\n    } else if (comments.length > 0) {\n      setHasComments(true);\n    }\n  }, [comments]);\n\n  const handleDelete = (commentId: number) => {\n    deleteComment(commentId);\n    setComments((prevState: Comment[]) => (\n      prevState.filter(comment => comment.id !== commentId)\n    ));\n  };\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${post?.id}: ${post?.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {post?.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n              Something went wrong\n            </div>\n          )}\n\n          {(comments.length > 0 && !isLoading) && (\n            <>\n              <p className=\"title is-4\">Comments:</p>\n              {comments.map(comment => {\n                const {\n                  name,\n                  email,\n                  id,\n                  body,\n                } = comment;\n\n                return (\n                  <article\n                    className=\"message is-small\"\n                    data-cy=\"Comment\"\n                    key={name}\n                  >\n                    <div className=\"message-header\">\n                      <a href={`mailto:${email}`} data-cy=\"CommentAuthor\">\n                        {name}\n                      </a>\n                      <button\n                        data-cy=\"CommentDelete\"\n                        type=\"button\"\n                        className=\"delete is-small\"\n                        aria-label=\"delete\"\n                        onClick={() => handleDelete(id)}\n                      >\n                        delete button\n                      </button>\n                    </div>\n\n                    <div className=\"message-body\" data-cy=\"CommentBody\">\n                      {body}\n                    </div>\n                  </article>\n                );\n              })}\n            </>\n          )}\n\n          {(!hasComments && post && !isLoading) && (\n            <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n              No comments yet\n            </p>\n          )}\n\n          {(!isNewComent && !isLoading && !hasError) && (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={() => setIsNewComent(true)}\n            >\n              Write a comment\n            </button>\n          )}\n\n        </div>\n\n        {(isNewComent && !isLoading) && (\n          <NewCommentForm\n            setComments={setComments}\n            postId={post?.id || 0}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { User } from '../types/User';\nimport { getUsers } from '../api/api';\nimport { Post } from '../types/Post';\n\ninterface Props {\n  selectedUserId: number;\n  setSelectedUserId: (id: number) => void;\n  setPost: (post: Post | null) => void,\n}\n\nexport const UserSelector: React.FC<Props> = ({\n  selectedUserId,\n  setSelectedUserId,\n  setPost,\n}) => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUserName, setSelectedUserName] = useState('');\n  const [isDropDownActive, setIsDropDownActive] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    getUsers().then((user) => {\n      setUsers(user);\n    });\n  }, []);\n\n  const selectUser = (user: User) => {\n    setPost(null);\n    if (user.id !== selectedUserId) {\n      setSelectedUserId(user.id);\n      setSelectedUserName(user.name);\n    }\n\n    setIsDropDownActive(false);\n  };\n\n  const handleClickOutside = (event: MouseEvent) => {\n    if (dropdownRef.current\n        && !dropdownRef.current.contains(event.target as HTMLElement)) {\n      setIsDropDownActive(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={`dropdown ${isDropDownActive && 'is-active'}`}\n      ref={dropdownRef}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={() => setIsDropDownActive(prevState => !prevState)}\n        >\n          <span>{selectedUserName || 'Choose a user'}</span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {users.map(user => {\n            const { id, name } = user;\n\n            return (\n              <a\n                key={id}\n                href={`#user-${id}`}\n                className={`dropdown-item ${id === selectedUserId && 'is-active'}`}\n                onClick={() => selectUser(user)}\n              >\n                {name}\n              </a>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { Post } from './types/Post';\n\nimport { getPostsByUser } from './api/api';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [post, setPost] = useState<Post | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [hasPost, setHasPost] = useState(false);\n\n  useEffect(() => {\n    if (selectedUserId) {\n      setIsLoading(true);\n      setHasPost(false);\n      getPostsByUser(selectedUserId).then((res) => {\n        setPosts(res);\n        setIsLoading(false);\n      }).catch(() => {\n        setIsLoading(false);\n        setHasError(true);\n      });\n    }\n  }, [selectedUserId]);\n\n  useEffect(() => {\n    if (!posts.length && selectedUserId !== 0) {\n      setHasPost(true);\n    } else {\n      setHasPost(false);\n    }\n  }, [posts]);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  selectedUserId={selectedUserId}\n                  setSelectedUserId={setSelectedUserId}\n                  setPost={setPost}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {selectedUserId === 0 && (\n                  <p data-cy=\"NoSelectedUser\">\n                    No user selected\n                  </p>\n                )}\n\n                {isLoading && <Loader />}\n\n                {hasError && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    Something went wrong!\n                  </div>\n                )}\n\n                {(posts.length > 0 && !isLoading) && (\n                  <PostsList\n                    posts={posts}\n                    currentPost={post}\n                    setPost={setPost}\n                  />\n                )}\n\n                {hasPost && (\n                  <div className=\"notification is-warning\" data-cy=\"NoPostsYet\">\n                    No posts yet\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': post },\n            )}\n          >\n            {post && (\n              <div className=\"tile is-child box is-success \">\n                <PostDetails post={post} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}